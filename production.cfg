[buildout]
extends =
    cfgs/base.cfg

prod-parts =
    env
    grp
    instance1
    instance2
    atct_conf
    instance-debug
    haproxy
    haproxy-conf
    nginx-conf
    logrotate

cron-parts =
    ejabberd-cronjob
    logrotate-crontab

cron-parts-zeo =
    backup-cronjob
    zeopack-crontab

parts =
    ${buildout:base-parts}
    ${buildout:prod-parts}
    ${buildout:varnish-parts}
    ${buildout:ejabberd-parts}
    ${buildout:cron-parts}
    ${buildout:cron-parts-zeo}
    ${buildout:supervisor-parts}

develop =
    src/intranett.policy
    src/intranett.theme

[backup-cronjob]
recipe = z3c.recipe.usercrontab
times = 37 2 * * *
command = ${buildout:directory}/bin/backup --quiet

[ejabberd-cronjob]
recipe = z3c.recipe.usercrontab
times = 17 2 * * *
command = ${buildout:directory}/bin/ejabberd-backup

[zeopack-crontab]
recipe = z3c.recipe.usercrontab
times = 47 1 * * *
command = ${buildout:bin-directory}/zeopack

[instance-base]
user = ${credentials:zope-user}
eggs += 
    psycopg2
    pylibmc
zeo-client = False
zeo-address =
blob-storage =
shared-blob = off
environment-vars +=
    LD_LIBRARY_PATH ${libmemcached:location}/lib
rel-storage =
    type postgresql
    dsn dbname='{env:INTRANETT_DATABASE}' user='{env:INTRANETT_DB_ID}' host='pgsql01.intranett.no' password='{env:INTRANETT_DB_PASSWORD}'
    shared-blob-dir false
    blob-dir ${buildout:directory}/var/blobcache
    blob-cache-size 512mb
    poll-interval 60
    cache-local-mb 0
    cache-prefix db1
    cache-servers 127.0.0.1:11211

environment-vars +=
    INTRANETT_PLONE_ID ${env:INTRANETT_PLONE_ID}
mailinglogger =
  <mailing-logger>
    level error
    flood-level 10
    smtp-server mail.gocept.net
    from logger@intranett.no
    to info@blaastolen.com
    subject [intranett.no error] [%(hostname)s] %(line)s
  </mailing-logger>

[instance1]
<= instance-base
http-port = ${ports:instance1-http-port}
http-address = 127.0.0.1:${ports:instance1-http-port}

[instance2]
<= instance-base
http-port = ${ports:instance2-http-port}
http-address = 127.0.0.1:${ports:instance2-http-port}


[instance1-supervisor]
autostart = true
name = instance1
program =
    [program:${:name}]
    command = ${buildout:bin-directory}/instance1 console
    startretries = 5
    redirect_stderr = true
    autostart = ${:autostart}
    autorestart = true
    priority = 300


[instance2-supervisor]
autostart = true
name = instance2
program =
    [program:${:name}]
    command = ${buildout:bin-directory}/instance2 console
    startretries = 5
    redirect_stderr = true
    autostart = ${:autostart}
    autorestart = true
    priority = 300



[instance-debug]
<= instance-base
http-port = 8090
http-address = 127.0.0.1:8090
verbose-security = on

[atct_conf]
recipe = plone.recipe.command
target1 = ${instance1:location}/etc/atcontenttypes.conf
target2 = ${instance2:location}/etc/atcontenttypes.conf
command = ln -s ${buildout:directory}/etc/atcontenttypes.conf ${:target1} ; ln -s ${buildout:directory}/etc/atcontenttypes.conf ${:target2}

[zopepy]
eggs = ${instance1:eggs}

[haproxy]
recipe = plone.recipe.haproxy
url = http://dist.jarn.com/public/haproxy-1.4.18.zip

[haproxy-conf]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/haproxy.cfg
output = ${buildout:directory}/etc/haproxy.cfg
user = ${env:USER}
group = ${grp:GROUP}
frontend-host = 127.0.0.1
frontend-port = 8010

[haproxy-supervisor]
autostart = true
name = haproxy
program =
    [program:${:name}]
    command = ${buildout:bin-directory}/haproxy -f %(here)s/haproxy.cfg -db
    autostart= true
    autorestart = true
    redirect_stderr = true
    priority = 101


[varnish-supervisor]
autostart = true
name = varnish
program =
    [program:${:name}]
    command = ${buildout:bin-directory}/varnish
    startretries = 5
    redirect_stderr = true
    autostart = true
    autorestart = true
    priority = 102

[supervisor-conf]
programs =
    ${haproxy-supervisor:program}
    ${varnish-supervisor:program}
    ${ejabberd-supervisor:program}
    ${instance1-supervisor:program}
    ${instance2-supervisor:program}

[test-supervisor-conf]
<= supervisor-conf
input = ${buildout:directory}/templates/supervisord-test.conf
output = ${buildout:directory}/etc/supervisord-test.conf


[logrotate]
recipe = collective.recipe.template
input =  ${buildout:directory}/templates/logrotate.conf
output = ${buildout:directory}/etc/logrotate.conf

[logrotate-crontab]
recipe = z3c.recipe.usercrontab
times = 57 23 * * *
command = /usr/sbin/logrotate -s ${buildout:directory}/var/logrotate.status ${buildout:directory}/etc/logrotate.conf
